"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[976],{4544:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"intro","title":"Introduction","description":"Zustand Storage is a universal state management solution that combines @aivron/sync-storage and zust-api to provide seamless persistence, middleware, and optional database integration for React apps.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/docs","permalink":"/docs","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"alphadevking","lastUpdatedAt":1740874064000,"sidebarPosition":1,"frontMatter":{"id":"intro","title":"Introduction","description":"Zustand Storage is a universal state management solution that combines @aivron/sync-storage and zust-api to provide seamless persistence, middleware, and optional database integration for React apps.","sidebar_position":1,"slug":"/docs"},"sidebar":"docs","next":{"title":"Getting Started","permalink":"/getting-started"}}');var a=t(612),r=t(7066);const o={id:"intro",title:"Introduction",description:"Zustand Storage is a universal state management solution that combines @aivron/sync-storage and zust-api to provide seamless persistence, middleware, and optional database integration for React apps.",sidebar_position:1,slug:"/docs"},i=void 0,d={},c=[{value:"Fast Track \u23f1\ufe0f",id:"fast-track",level:2},{value:"Installation",id:"installation",level:3},{value:"Create Your Synced Store",id:"create-your-synced-store",level:3},{value:"Using the Store in Your Application",id:"using-the-store-in-your-application",level:3},{value:"Key Features",id:"key-features",level:2},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(n.p,{children:["\u26a1\ufe0f ",(0,a.jsx)(n.strong,{children:"Zustand Storage"})," helps you manage your application state effortlessly with a powerful API and automatic persistence\u2014all built with React in mind."]}),"\n",(0,a.jsxs)(n.p,{children:["\ud83d\udcb8 Building a robust state management solution from scratch can be challenging. Instead, ",(0,a.jsx)(n.strong,{children:"focus on your app\u2019s core features"})," while Zustand Storage takes care of state synchronization, local persistence, and even database integration."]}),"\n",(0,a.jsx)(n.p,{children:"\ud83d\udca5 Ready for more? With advanced features like configurable merge strategies, debounce persistence, middleware support, and optional direct integration with databases such as MongoDB and PostgreSQL, Zustand Storage scales with your project\u2019s needs."}),"\n",(0,a.jsx)(n.h2,{id:"fast-track",children:"Fast Track \u23f1\ufe0f"}),"\n",(0,a.jsxs)(n.p,{children:["Learn Zustand Storage in ",(0,a.jsx)(n.strong,{children:"5 minutes"})," by following this quick tutorial."]}),"\n",(0,a.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.a,{href:"https://nodejs.org/en/download/",children:"Node.js"})," (version 18.0 or above) and add Zustand Storage to your project:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install zustand-storage\n"})}),"\n",(0,a.jsx)(n.p,{children:"Or with pnpm:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add zustand-storage\n"})}),"\n",(0,a.jsx)(n.h3,{id:"create-your-synced-store",children:"Create Your Synced Store"}),"\n",(0,a.jsxs)(n.p,{children:["Create a new file (e.g., ",(0,a.jsx)(n.code,{children:"store.ts"}),") and set up your synced store:"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-ts",children:"import { createSyncedStore } from 'zustand-storage';\n\ninterface AppState {\n  count: number;\n}\n\nconst store = createSyncedStore<AppState, { increment: () => void }>({\n  key: 'app-state',\n  initialState: { count: 0 },\n  actions: (set, get) => ({\n    increment: () => set({ count: get().count + 1 }),\n  }),\n  syncOptions: {\n    debounce: 300,\n    persistOn: 'change',\n    onError: (error) => console.error(\"Sync error:\", error),\n  },\n  mergeStrategy: 'deep',\n});\n\nexport default store;\n"})}),"\n",(0,a.jsx)(n.h3,{id:"using-the-store-in-your-application",children:"Using the Store in Your Application"}),"\n",(0,a.jsx)(n.p,{children:"Integrate the store in your React components using the provided hook:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { useStore } from 'zustand-storage';\n\nfunction Counter() {\n  const [state, actions] = useStore();\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={actions.increment}>Increment</button>\n    </div>\n  );\n}\n\nexport default Counter;\n"})}),"\n",(0,a.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Effortless Integration:"})," Quickly set up your synced store and integrate it with React."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Automatic Persistence:"})," Configure debounce intervals and merge strategies to keep your state in sync across sessions."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Middleware Support:"})," Enhance state updates with custom middleware."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Database Integration:"})," Optionally connect to databases like MongoDB or PostgreSQL for hybrid local-remote state management."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"API Reference:"})," Dive into detailed API docs for advanced usage."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Migration Guide:"})," Learn how to handle state schema changes with ease."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"FAQ & Troubleshooting:"})," Find answers to common questions and issues."]}),"\n"]}),"\n",(0,a.jsx)(n.admonition,{type:"tip",children:(0,a.jsxs)(n.p,{children:["Need more details or help? Visit our ",(0,a.jsx)(n.a,{href:"https://github.com/aivron/zustand-storage",children:"GitHub repository"})," for comprehensive documentation, examples, and support."]})}),"\n",(0,a.jsx)(n.p,{children:"Happy coding with Zustand Storage!"})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},7066:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var s=t(4344);const a={},r=s.createContext(a);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);