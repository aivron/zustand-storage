"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[911],{2619:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/useStore","title":"useStore","description":"The useStore hook provides a convenient way to access the store\'s current state and its associated actions within your React components. It ensures that your components re-render automatically when the state changes.","source":"@site/docs/api/useStore.md","sourceDirName":"api","slug":"/api/useStore","permalink":"/api/useStore","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"alphadevking","lastUpdatedAt":1740874064000,"frontMatter":{"title":"useStore","sidebar_label":"useStore"},"sidebar":"api","previous":{"title":"createSyncedStore","permalink":"/api/createSyncedStore"},"next":{"title":"actions","permalink":"/api/actions"}}');var r=n(612),o=n(7066);const i={title:"useStore",sidebar_label:"useStore"},a="useStore",c={},d=[{value:"Usage",id:"usage",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2},{value:"Additional Notes",id:"additional-notes",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"usestore",children:"useStore"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"useStore"})," hook provides a convenient way to access the store's current state and its associated actions within your React components. It ensures that your components re-render automatically when the state changes."]}),"\n",(0,r.jsx)(t.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport { useStore } from 'zustand-storage';\n\nfunction Counter() {\n  const [state, actions] = useStore();\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={actions.increment}>Increment</button>\n    </div>\n  );\n}\n\nexport default Counter;\n"})}),"\n",(0,r.jsx)(t.h2,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"useStore"})," hook returns an array with two elements:"]}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"State:"})," The current state object of your store."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Actions:"})," An object containing the action methods defined during the store's creation."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"This hook is designed to seamlessly integrate with React, triggering re-renders whenever the state updates."}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsxs)(t.p,{children:["Below is a complete example that demonstrates the use of ",(0,r.jsx)(t.code,{children:"useStore"})," in a simple counter application:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-tsx",children:"import React from 'react';\nimport { useStore } from 'zustand-storage';\n\nexport default function App() {\n  const [state, actions] = useStore();\n\n  return (\n    <div>\n      <h1>Counter App</h1>\n      <p>Current Count: {state.count}</p>\n      <button onClick={actions.increment}>Increment</button>\n      <button onClick={actions.decrement}>Decrement</button>\n    </div>\n  );\n}\n"})}),"\n",(0,r.jsx)(t.h2,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Automatic Re-rendering:"}),"\nThe hook listens for changes in the store's state and causes the component to re-render, ensuring your UI stays up-to-date."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Integration with createSyncedStore:"}),"\nThe state and actions returned by ",(0,r.jsx)(t.code,{children:"useStore"})," correspond directly to the configuration provided when creating the store with ",(0,r.jsx)(t.code,{children:"createSyncedStore"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(t.li,{children:["\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.strong,{children:"Type Safety:"}),"\nWhen using TypeScript, ensure that your store and actions are properly typed to leverage the full benefits of type-checking."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(t.p,{children:["By using ",(0,r.jsx)(t.code,{children:"useStore"}),", you can efficiently manage and reflect state changes in your React components with minimal boilerplate."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},7066:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var s=n(4344);const r={},o=s.createContext(r);function i(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);