"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[923],{1896:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/actions","title":"actions","description":"The actions object includes all the functions you define when creating your synced store with createSyncedStore. These actions provide a clean interface for updating state, performing asynchronous tasks, and managing side effects.","source":"@site/docs/api/actions.md","sourceDirName":"api","slug":"/api/actions","permalink":"/zustand-storage/api/actions","draft":false,"unlisted":false,"tags":[],"version":"current","lastUpdatedBy":"alphadevking","lastUpdatedAt":1740943107000,"frontMatter":{"title":"actions","sidebar_label":"actions"},"sidebar":"api","previous":{"title":"useStore","permalink":"/zustand-storage/api/useStore"},"next":{"title":"getState","permalink":"/zustand-storage/api/getState"}}');var i=t(612),o=t(7066);const a={title:"actions",sidebar_label:"actions"},c="actions",r={},d=[{value:"Usage",id:"usage",level:2},{value:"Accessing Actions",id:"accessing-actions",level:2},{value:"Additional Notes",id:"additional-notes",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"actions",children:"actions"})}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"actions"})," object includes all the functions you define when creating your synced store with ",(0,i.jsx)(n.code,{children:"createSyncedStore"}),". These actions provide a clean interface for updating state, performing asynchronous tasks, and managing side effects."]}),"\n",(0,i.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.p,{children:"When creating your store, you define actions to update the state. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { createSyncedStore } from 'zustand-storage';\n\ninterface AppState {\n  count: number;\n}\n\ninterface AppActions {\n  increment: () => void;\n  decrement: () => void;\n}\n\nconst store = createSyncedStore<AppState, AppActions>({\n  key: 'app-state',\n  initialState: { count: 0 },\n  actions: (set, get) => ({\n    increment: () => set({ count: get().count + 1 }),\n    decrement: () => set((prev) => ({ count: prev.count - 1 })),\n  }),\n  syncOptions: {\n    debounce: 300,\n    persistOn: 'change',\n  },\n  mergeStrategy: 'deep',\n});\n\nexport default store;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"accessing-actions",children:"Accessing Actions"}),"\n",(0,i.jsx)(n.p,{children:"You can access the actions directly via the store:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import store from './store';\n\nstore.actions.increment();\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Or by using the ",(0,i.jsx)(n.code,{children:"useStore"})," hook within a React component:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport { useStore } from 'zustand-storage';\n\nfunction Counter() {\n  const [state, actions] = useStore();\n\n  return (\n    <div>\n      <p>Count: {state.count}</p>\n      <button onClick={actions.increment}>Increment</button>\n      <button onClick={actions.decrement}>Decrement</button>\n    </div>\n  );\n}\n\nexport default Counter;\n"})}),"\n",(0,i.jsx)(n.h2,{id:"additional-notes",children:"Additional Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Customization:"}),"\nActions are defined during store creation and can handle both synchronous and asynchronous state updates."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Side Effects:"}),"\nActions can include side effects such as API calls, logging, or other operations as needed by your application."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Type Safety:"}),"\nWhen using TypeScript, defining interfaces for your state and actions ensures a predictable and type-safe store."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"actions"})," object centralizes your application's state modifications, making it easier to maintain and evolve your business logic."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},7066:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var s=t(4344);const i={},o=s.createContext(i);function a(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);